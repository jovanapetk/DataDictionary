package DataDictionary.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Aggregation = 0;
  public static final int ComplexExclusiveSpecialization = 1;
  public static final int ComplexSet = 2;
  public static final int Dictionary = 3;
  public static final int DomainDefinition = 4;
  public static final int ExclusiveSpecialization = 5;
  public static final int Field = 6;
  public static final int FieldDefinition = 7;
  public static final int FieldReference = 8;
  public static final int NonExclusiveSpecialization = 9;
  public static final int ReferenceField = 10;
  public static final int Set = 11;
  public static final int SimpleField = 12;
  public static final int SimpleStructure = 13;
  public static final int Structure = 14;
  public static final int StructureField1 = 15;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xa7f45b2b89264555L, 0x82d3927859451525L);
    builder.put(0xdff9927af035b20L, Aggregation);
    builder.put(0x3bc786e1122ab15cL, ComplexExclusiveSpecialization);
    builder.put(0x3bc786e1122ab15dL, ComplexSet);
    builder.put(0xdff9927af035b14L, Dictionary);
    builder.put(0x59a318f513b30c9dL, DomainDefinition);
    builder.put(0xdff9927af035b2cL, ExclusiveSpecialization);
    builder.put(0xdff9927af035b38L, Field);
    builder.put(0x59a318f513b30ca3L, FieldDefinition);
    builder.put(0x1219178a29573245L, FieldReference);
    builder.put(0xdff9927af035b32L, NonExclusiveSpecialization);
    builder.put(0xdff9927af035b4aL, ReferenceField);
    builder.put(0xdff9927af035b26L, Set);
    builder.put(0xdff9927af035b44L, SimpleField);
    builder.put(0x3bc786e1122ab167L, SimpleStructure);
    builder.put(0xdff9927af035b1aL, Structure);
    builder.put(0x3bc786e1122a88a7L, StructureField1);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
