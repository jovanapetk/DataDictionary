package DataDictionary.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class check_StructureField1_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_StructureField1_NonTypesystemRule() {
  }
  public void applyRule(final SNode structureField1, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    for (SNode sf1 : SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(structureField1, MetaAdapterFactory.getInterfaceConcept(0xa7f45b2b89264555L, 0x82d3927859451525L, 0xdff9927af035b1aL, "DataDictionary.structure.Structure"), false, false), MetaAdapterFactory.getContainmentLink(0xa7f45b2b89264555L, 0x82d3927859451525L, 0xdff9927af035b1aL, 0xdff9927af035b55L, "fields"))) {
      if (sf1 != structureField1) {
        if (SLinkOperations.getTarget(structureField1, MetaAdapterFactory.getReferenceLink(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x3bc786e1122a88a7L, 0x3bc786e1122ab156L, "referencedStructures")) == SLinkOperations.getTarget(sf1, MetaAdapterFactory.getReferenceLink(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x3bc786e1122a88a7L, 0x3bc786e1122ab156L, "referencedStructures"))) {
          {
            MessageTarget errorTarget = new NodeMessageTarget();
            IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(structureField1, "There is already a Structure Field that references this structure", "r:093bd85a-a53f-4722-afcd-77264e14e7dc(DataDictionary.typesystem)", "8854052041974958975", null, errorTarget);
          }
        }

      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getInterfaceConcept(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x3bc786e1122a88a7L, "DataDictionary.structure.StructureField1");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
}
