package DataDictionary.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.AbstractNonTypesystemRule_Runtime;
import jetbrains.mps.lang.typesystem.runtime.NonTypesystemRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.typesystem.inference.TypeCheckingContext;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.errors.messageTargets.MessageTarget;
import jetbrains.mps.errors.messageTargets.NodeMessageTarget;
import jetbrains.mps.errors.IErrorReporter;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public class check_FieldDefinition_NonTypesystemRule extends AbstractNonTypesystemRule_Runtime implements NonTypesystemRule_Runtime {
  public check_FieldDefinition_NonTypesystemRule() {
  }
  public void applyRule(final SNode fieldDefinition, final TypeCheckingContext typeCheckingContext, IsApplicableStatus status) {
    for (SNode fd1 : SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(fieldDefinition, MetaAdapterFactory.getConcept(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x59a318f513b30c9dL, "DataDictionary.structure.DomainDefinition"), false, false), MetaAdapterFactory.getContainmentLink(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x59a318f513b30c9dL, 0x59a318f513b30cabL, "fieldDefinitions"))) {
      if (fd1 != fieldDefinition) {
        if (SLinkOperations.getTarget(fd1, MetaAdapterFactory.getReferenceLink(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x59a318f513b30ca3L, 0x59a318f513b30ca4L, "fieldReference")) == SLinkOperations.getTarget(fieldDefinition, MetaAdapterFactory.getReferenceLink(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x59a318f513b30ca3L, 0x59a318f513b30ca4L, "fieldReference"))) {
          {
            MessageTarget errorTarget = new NodeMessageTarget();
            IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(fieldDefinition, "You already defined the domain for this field", "r:093bd85a-a53f-4722-afcd-77264e14e7dc(DataDictionary.typesystem)", "8854052041976367569", null, errorTarget);
          }
        }
      }
    }
  }
  public SAbstractConcept getApplicableConcept() {
    return MetaAdapterFactory.getConcept(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x59a318f513b30ca3L, "DataDictionary.structure.FieldDefinition");
  }
  public IsApplicableStatus isApplicableAndPattern(SNode argument) {
    return new IsApplicableStatus(argument.getConcept().isSubConceptOf(getApplicableConcept()), null);
  }
  public boolean overrides() {
    return false;
  }
}
