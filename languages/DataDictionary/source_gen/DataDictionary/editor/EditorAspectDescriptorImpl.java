package DataDictionary.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.SubstituteMenu;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt_a0a = ((SAbstractConcept) concept);
    switch (index_xbvbvu_a0a.index(cncpt_a0a)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Aggregation_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new ComplexExclusiveSpecialization_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new ComplexSet_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new Dictionary_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new DomainDefinition_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new ExclusiveSpecialization_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new FieldDefinition_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new FieldReference_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new NonExclusiveSpecialization_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new ReferenceField_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new Set_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new SimpleField_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new SimpleStructure_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<SubstituteMenu> getDeclaredDefaultSubstituteMenus(SAbstractConcept concept) {
    SAbstractConcept cncpt_a0d = concept;
    switch (index_xbvbvu_a0d.index(cncpt_a0d)) {
      case 0:
        return Collections.<SubstituteMenu>singletonList(new ReferenceField_SubstituteMenu());
      default:
    }
    return Collections.<SubstituteMenu>emptyList();
  }

  private static final ConceptSwitchIndex index_xbvbvu_a0a = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0xdff9927af035b20L), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x3bc786e1122ab15cL), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x3bc786e1122ab15dL), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0xdff9927af035b14L), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x59a318f513b30c9dL), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0xdff9927af035b2cL), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x59a318f513b30ca3L), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x1219178a29573245L), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0xdff9927af035b32L), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0xdff9927af035b4aL), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0xdff9927af035b26L), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0xdff9927af035b44L), MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0x3bc786e1122ab167L)).seal();
  private static final ConceptSwitchIndex index_xbvbvu_a0d = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xa7f45b2b89264555L, 0x82d3927859451525L, 0xdff9927af035b4aL)).seal();
}
